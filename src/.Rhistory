MyData <- read.csv(file="result/test/vecteur_file.csv", header=TRUE, sep=";",,stringsAsFactors=FALSE)
summary(MyData)
#lecture du fichier csv
MyData <- read.csv(file="result/test/vecteur_file.csv", header=TRUE, sep=";",,stringsAsFactors=FALSE)
summary(MyData)
MyData[is.na(MyData)] <- 0
#normalisation par zscore
MyData$ACC<-(MyData$ACC-mean(MyData$ACC))/sd(MyData$ACC)
MyData$polar<-(MyData$polar-mean(MyData$polar))/sd(MyData$polar)
MyData$hydrogenB<-(MyData$hydrogenB-mean(MyData$hydrogenB))/sd(MyData$hydrogenB)
MyData$hydrophobic<-(MyData$hydrophobic-mean(MyData$hydrophobic))/sd(MyData$hydrophobic)
MyData$vdw<-(MyData$vdw-mean(MyData$vdw))/sd(MyData$vdw)
MyData$ionic<-(MyData$ionic-mean(MyData$ionic))/sd(MyData$ionic)
#PCA
#center = TRUE,scale. = TRUE
MyData.Vector <- MyData[, 2:length(MyData)]
MyData.AA <- MyData$AA
MyData.Vector.pca <- prcomp(MyData.Vector,center = TRUE,scale. = TRUE)
print(MyData.Vector.pca)
plot(MyData.Vector.pca, type = "l")
plot(MyData.Vector.pca)
summary(MyData.Vector.pca)
biplot(MyData.Vector.pca)
#center = F,scale. = F
MyData.Vector.pca <- prcomp(MyData.Vector)
print(MyData.Vector.pca)
plot(MyData.Vector.pca, type = "l")
plot(MyData.Vector.pca)
summary(MyData.Vector.pca)
biplot(MyData.Vector.pca)
#plot
# Plot
install.packages("ggfortify")
library("ggplot2")
library("ggfortify")
autoplot(MyData.Vector.pca, loadings = TRUE, loadings.label = TRUE, data = MyData, colour = 'AA')
#clusterisation
#kmeans
#DETERMINATION NB CLUSTER
install.packages("tidyverse")
library(tidyverse)  # data manipulation
install.packages("factoextra")
library(factoextra) # clustering algorithms & visualization
fviz_nbclust(MyData.Vector, kmeans, method = "wss")+
geom_vline(xintercept = 4, linetype = 2)
#CALCUL
set.seed(8953)
iris2 <- MyData
iris2$AA <- NULL
(kmeans.result <- kmeans(iris2, 3))
table(MyData$AA, kmeans.result$cluster)
#plot
autoplot(kmeans.result, data = MyData, label = TRUE, label.size = 3, frame = TRUE)
#kmedoid
#Clustering with pam()
# group into 3 clusters
library(cluster)
pam.res=pam(MyData.Vector, 4)
autoplot(pam.res, frame = TRUE, frame.type = 'norm')
plot(silhouette(pam.res),  col = 2:5)
fviz_silhouette(silhouette(pam.res))
# Compute silhouette
sil <- silhouette(pam.res)[, 1:3]
# Objects with negative silhouette
neg_sil_index <- which(sil[, 'sil_width'] < 0)
sil[neg_sil_index, , drop = FALSE]
##          cluster neighbor   sil_width
## Nebraska       3        4 -0.04034739
## Montana        3        4 -0.18266793
# Compute clara
clarax <- clara(x, 2, samples=50)
# Cluster plot
fviz_cluster(clarax, stand = FALSE, geom = "point",
pointsize = 1)
# Silhouette plot
plot(silhouette(clarax),  col = 2:3, main = "Silhouette plot")
MyData <- read.csv(file="result/test/vecteur_file.csv", header=TRUE, sep=";",,stringsAsFactors=FALSE)
MyData <- read.csv(file="result/test/vecteur_file.csv", header=TRUE, sep=";",,stringsAsFactors=FALSE)
